# Makefile.in generated by automake 1.14.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/cpuminer
pkgincludedir = $(includedir)/cpuminer
pkglibdir = $(libdir)/cpuminer
pkglibexecdir = $(libexecdir)/cpuminer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = minerd$(EXEEXT)
subdir = .
DIST_COMMON = INSTALL NEWS README AUTHORS ChangeLog \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/cpuminer-config.h.in depcomp COPYING compile \
	config.guess config.sub install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libcurl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = cpuminer-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_minerd_OBJECTS = minerd-cpu-miner.$(OBJEXT) minerd-util.$(OBJEXT) \
	minerd-sha2.$(OBJEXT) minerd-sha2-arm.$(OBJEXT) \
	minerd-sha2-x86.$(OBJEXT) minerd-sha2-x64.$(OBJEXT) \
	minerd-scrypt.$(OBJEXT) minerd-scrypt-arm.$(OBJEXT) \
	minerd-scrypt-x86.$(OBJEXT) minerd-scrypt-x64.$(OBJEXT) \
	minerd-aes_helper.$(OBJEXT) minerd-luffa_for_sse2.$(OBJEXT) \
	minerd-shavite.$(OBJEXT) minerd-cubehash_sse2.$(OBJEXT) \
	minerd-nist.$(OBJEXT) minerd-vector.$(OBJEXT) \
	minerd-echo.$(OBJEXT) minerd-blake.$(OBJEXT) \
	minerd-hash.$(OBJEXT) minerd-hash-groestl.$(OBJEXT) \
	minerd-xcoin.$(OBJEXT)
minerd_OBJECTS = $(am_minerd_OBJECTS)
minerd_DEPENDENCIES =
minerd_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(minerd_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS   " $@;
am__v_CPPAS_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(minerd_SOURCES)
DIST_SOURCES = $(minerd_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)cpuminer-config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/marcel/cpuminer-flax-REL/missing aclocal-1.14
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/marcel/cpuminer-flax-REL/missing autoconf
AUTOHEADER = ${SHELL} /home/marcel/cpuminer-flax-REL/missing autoheader
AUTOMAKE = ${SHELL} /home/marcel/cpuminer-flax-REL/missing automake-1.14
AWK = mawk
CC = gcc -std=gnu99
CCAS = gcc -std=gnu99
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -O3 -msse2 -msse3 -mssse3 -maes -mavx
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -msse2 -msse3 -mssse3 -maes -mavx
CPP = gcc -std=gnu99 -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JANSSON_LIBS = -ljansson
LDFLAGS = 
LIBCURL = -L/usr/lib/x86_64-linux-gnu -lcurl
LIBCURL_CPPFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/marcel/cpuminer-flax-REL/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = cpuminer
PACKAGE_BUGREPORT = 
PACKAGE_NAME = cpuminer
PACKAGE_STRING = cpuminer 2.3.2
PACKAGE_TARNAME = cpuminer
PACKAGE_URL = 
PACKAGE_VERSION = 2.3.2
PATH_SEPARATOR = :
PTHREAD_FLAGS = -pthread
PTHREAD_LIBS = -lpthread
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 2.3.2
WS2_LIBS = 
_libcurl_config = 
abs_builddir = /home/marcel/cpuminer-flax-REL
abs_srcdir = /home/marcel/cpuminer-flax-REL
abs_top_builddir = /home/marcel/cpuminer-flax-REL
abs_top_srcdir = /home/marcel/cpuminer-flax-REL
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/marcel/cpuminer-flax-REL/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = 
top_builddir = .
top_srcdir = .
JANSSON_INCLUDES = 
#JANSSON_INCLUDES = -I$(top_srcdir)/compat/jansson
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = example-cfg.json nomacro.pl
SUBDIRS = compat
INCLUDES = $(PTHREAD_FLAGS) -fno-strict-aliasing $(JANSSON_INCLUDES)
minerd_SOURCES = elist.h miner.h compat.h \
		  cpu-miner.c util.c \
		  x2/sha2.c x2/sha2-arm.S x2/sha2-x86.S x2/sha2-x64.S \
		  x2/scrypt.c x2/scrypt-arm.S x2/scrypt-x86.S x2/scrypt-x64.S \
		  x5/aes_helper.c x5/luffa_for_sse2.c x5/shavite.c x5/cubehash_sse2.c x5/vect128/nist.c x5/vect128/vector.c \
		  x5/echo.c x6/blake.c x5/echo512/ccalik/aesni/hash.c \
		  x6/groestl/aesni/hash-groestl.c xcoin.c

minerd_LDFLAGS = $(PTHREAD_FLAGS)
minerd_LDADD = -L/usr/lib/x86_64-linux-gnu -lcurl -ljansson -lpthread 
minerd_CPPFLAGS = 
all: cpuminer-config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .S .c .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

cpuminer-config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/cpuminer-config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status cpuminer-config.h
$(srcdir)/cpuminer-config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f cpuminer-config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

minerd$(EXEEXT): $(minerd_OBJECTS) $(minerd_DEPENDENCIES) $(EXTRA_minerd_DEPENDENCIES) 
	@rm -f minerd$(EXEEXT)
	$(AM_V_CCLD)$(minerd_LINK) $(minerd_OBJECTS) $(minerd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/minerd-aes_helper.Po
include ./$(DEPDIR)/minerd-blake.Po
include ./$(DEPDIR)/minerd-cpu-miner.Po
include ./$(DEPDIR)/minerd-cubehash_sse2.Po
include ./$(DEPDIR)/minerd-echo.Po
include ./$(DEPDIR)/minerd-hash-groestl.Po
include ./$(DEPDIR)/minerd-hash.Po
include ./$(DEPDIR)/minerd-luffa_for_sse2.Po
include ./$(DEPDIR)/minerd-nist.Po
include ./$(DEPDIR)/minerd-scrypt-arm.Po
include ./$(DEPDIR)/minerd-scrypt-x64.Po
include ./$(DEPDIR)/minerd-scrypt-x86.Po
include ./$(DEPDIR)/minerd-scrypt.Po
include ./$(DEPDIR)/minerd-sha2-arm.Po
include ./$(DEPDIR)/minerd-sha2-x64.Po
include ./$(DEPDIR)/minerd-sha2-x86.Po
include ./$(DEPDIR)/minerd-sha2.Po
include ./$(DEPDIR)/minerd-shavite.Po
include ./$(DEPDIR)/minerd-util.Po
include ./$(DEPDIR)/minerd-vector.Po
include ./$(DEPDIR)/minerd-xcoin.Po

.S.o:
	$(AM_V_CPPAS)$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)$(CPPASCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

minerd-sha2-arm.o: x2/sha2-arm.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-arm.o -MD -MP -MF $(DEPDIR)/minerd-sha2-arm.Tpo -c -o minerd-sha2-arm.o `test -f 'x2/sha2-arm.S' || echo '$(srcdir)/'`x2/sha2-arm.S
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2-arm.Tpo $(DEPDIR)/minerd-sha2-arm.Po
#	$(AM_V_CPPAS)source='x2/sha2-arm.S' object='minerd-sha2-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-arm.o `test -f 'x2/sha2-arm.S' || echo '$(srcdir)/'`x2/sha2-arm.S

minerd-sha2-arm.obj: x2/sha2-arm.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-arm.obj -MD -MP -MF $(DEPDIR)/minerd-sha2-arm.Tpo -c -o minerd-sha2-arm.obj `if test -f 'x2/sha2-arm.S'; then $(CYGPATH_W) 'x2/sha2-arm.S'; else $(CYGPATH_W) '$(srcdir)/x2/sha2-arm.S'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2-arm.Tpo $(DEPDIR)/minerd-sha2-arm.Po
#	$(AM_V_CPPAS)source='x2/sha2-arm.S' object='minerd-sha2-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-arm.obj `if test -f 'x2/sha2-arm.S'; then $(CYGPATH_W) 'x2/sha2-arm.S'; else $(CYGPATH_W) '$(srcdir)/x2/sha2-arm.S'; fi`

minerd-sha2-x86.o: x2/sha2-x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x86.o -MD -MP -MF $(DEPDIR)/minerd-sha2-x86.Tpo -c -o minerd-sha2-x86.o `test -f 'x2/sha2-x86.S' || echo '$(srcdir)/'`x2/sha2-x86.S
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2-x86.Tpo $(DEPDIR)/minerd-sha2-x86.Po
#	$(AM_V_CPPAS)source='x2/sha2-x86.S' object='minerd-sha2-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x86.o `test -f 'x2/sha2-x86.S' || echo '$(srcdir)/'`x2/sha2-x86.S

minerd-sha2-x86.obj: x2/sha2-x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x86.obj -MD -MP -MF $(DEPDIR)/minerd-sha2-x86.Tpo -c -o minerd-sha2-x86.obj `if test -f 'x2/sha2-x86.S'; then $(CYGPATH_W) 'x2/sha2-x86.S'; else $(CYGPATH_W) '$(srcdir)/x2/sha2-x86.S'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2-x86.Tpo $(DEPDIR)/minerd-sha2-x86.Po
#	$(AM_V_CPPAS)source='x2/sha2-x86.S' object='minerd-sha2-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x86.obj `if test -f 'x2/sha2-x86.S'; then $(CYGPATH_W) 'x2/sha2-x86.S'; else $(CYGPATH_W) '$(srcdir)/x2/sha2-x86.S'; fi`

minerd-sha2-x64.o: x2/sha2-x64.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x64.o -MD -MP -MF $(DEPDIR)/minerd-sha2-x64.Tpo -c -o minerd-sha2-x64.o `test -f 'x2/sha2-x64.S' || echo '$(srcdir)/'`x2/sha2-x64.S
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2-x64.Tpo $(DEPDIR)/minerd-sha2-x64.Po
#	$(AM_V_CPPAS)source='x2/sha2-x64.S' object='minerd-sha2-x64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x64.o `test -f 'x2/sha2-x64.S' || echo '$(srcdir)/'`x2/sha2-x64.S

minerd-sha2-x64.obj: x2/sha2-x64.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-sha2-x64.obj -MD -MP -MF $(DEPDIR)/minerd-sha2-x64.Tpo -c -o minerd-sha2-x64.obj `if test -f 'x2/sha2-x64.S'; then $(CYGPATH_W) 'x2/sha2-x64.S'; else $(CYGPATH_W) '$(srcdir)/x2/sha2-x64.S'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2-x64.Tpo $(DEPDIR)/minerd-sha2-x64.Po
#	$(AM_V_CPPAS)source='x2/sha2-x64.S' object='minerd-sha2-x64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-sha2-x64.obj `if test -f 'x2/sha2-x64.S'; then $(CYGPATH_W) 'x2/sha2-x64.S'; else $(CYGPATH_W) '$(srcdir)/x2/sha2-x64.S'; fi`

minerd-scrypt-arm.o: x2/scrypt-arm.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-arm.o -MD -MP -MF $(DEPDIR)/minerd-scrypt-arm.Tpo -c -o minerd-scrypt-arm.o `test -f 'x2/scrypt-arm.S' || echo '$(srcdir)/'`x2/scrypt-arm.S
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt-arm.Tpo $(DEPDIR)/minerd-scrypt-arm.Po
#	$(AM_V_CPPAS)source='x2/scrypt-arm.S' object='minerd-scrypt-arm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-arm.o `test -f 'x2/scrypt-arm.S' || echo '$(srcdir)/'`x2/scrypt-arm.S

minerd-scrypt-arm.obj: x2/scrypt-arm.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-arm.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt-arm.Tpo -c -o minerd-scrypt-arm.obj `if test -f 'x2/scrypt-arm.S'; then $(CYGPATH_W) 'x2/scrypt-arm.S'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt-arm.S'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt-arm.Tpo $(DEPDIR)/minerd-scrypt-arm.Po
#	$(AM_V_CPPAS)source='x2/scrypt-arm.S' object='minerd-scrypt-arm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-arm.obj `if test -f 'x2/scrypt-arm.S'; then $(CYGPATH_W) 'x2/scrypt-arm.S'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt-arm.S'; fi`

minerd-scrypt-x86.o: x2/scrypt-x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x86.o -MD -MP -MF $(DEPDIR)/minerd-scrypt-x86.Tpo -c -o minerd-scrypt-x86.o `test -f 'x2/scrypt-x86.S' || echo '$(srcdir)/'`x2/scrypt-x86.S
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt-x86.Tpo $(DEPDIR)/minerd-scrypt-x86.Po
#	$(AM_V_CPPAS)source='x2/scrypt-x86.S' object='minerd-scrypt-x86.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x86.o `test -f 'x2/scrypt-x86.S' || echo '$(srcdir)/'`x2/scrypt-x86.S

minerd-scrypt-x86.obj: x2/scrypt-x86.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x86.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt-x86.Tpo -c -o minerd-scrypt-x86.obj `if test -f 'x2/scrypt-x86.S'; then $(CYGPATH_W) 'x2/scrypt-x86.S'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt-x86.S'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt-x86.Tpo $(DEPDIR)/minerd-scrypt-x86.Po
#	$(AM_V_CPPAS)source='x2/scrypt-x86.S' object='minerd-scrypt-x86.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x86.obj `if test -f 'x2/scrypt-x86.S'; then $(CYGPATH_W) 'x2/scrypt-x86.S'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt-x86.S'; fi`

minerd-scrypt-x64.o: x2/scrypt-x64.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x64.o -MD -MP -MF $(DEPDIR)/minerd-scrypt-x64.Tpo -c -o minerd-scrypt-x64.o `test -f 'x2/scrypt-x64.S' || echo '$(srcdir)/'`x2/scrypt-x64.S
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt-x64.Tpo $(DEPDIR)/minerd-scrypt-x64.Po
#	$(AM_V_CPPAS)source='x2/scrypt-x64.S' object='minerd-scrypt-x64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x64.o `test -f 'x2/scrypt-x64.S' || echo '$(srcdir)/'`x2/scrypt-x64.S

minerd-scrypt-x64.obj: x2/scrypt-x64.S
	$(AM_V_CPPAS)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT minerd-scrypt-x64.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt-x64.Tpo -c -o minerd-scrypt-x64.obj `if test -f 'x2/scrypt-x64.S'; then $(CYGPATH_W) 'x2/scrypt-x64.S'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt-x64.S'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt-x64.Tpo $(DEPDIR)/minerd-scrypt-x64.Po
#	$(AM_V_CPPAS)source='x2/scrypt-x64.S' object='minerd-scrypt-x64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o minerd-scrypt-x64.obj `if test -f 'x2/scrypt-x64.S'; then $(CYGPATH_W) 'x2/scrypt-x64.S'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt-x64.S'; fi`

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

minerd-cpu-miner.o: cpu-miner.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cpu-miner.o -MD -MP -MF $(DEPDIR)/minerd-cpu-miner.Tpo -c -o minerd-cpu-miner.o `test -f 'cpu-miner.c' || echo '$(srcdir)/'`cpu-miner.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-cpu-miner.Tpo $(DEPDIR)/minerd-cpu-miner.Po
#	$(AM_V_CC)source='cpu-miner.c' object='minerd-cpu-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cpu-miner.o `test -f 'cpu-miner.c' || echo '$(srcdir)/'`cpu-miner.c

minerd-cpu-miner.obj: cpu-miner.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cpu-miner.obj -MD -MP -MF $(DEPDIR)/minerd-cpu-miner.Tpo -c -o minerd-cpu-miner.obj `if test -f 'cpu-miner.c'; then $(CYGPATH_W) 'cpu-miner.c'; else $(CYGPATH_W) '$(srcdir)/cpu-miner.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-cpu-miner.Tpo $(DEPDIR)/minerd-cpu-miner.Po
#	$(AM_V_CC)source='cpu-miner.c' object='minerd-cpu-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cpu-miner.obj `if test -f 'cpu-miner.c'; then $(CYGPATH_W) 'cpu-miner.c'; else $(CYGPATH_W) '$(srcdir)/cpu-miner.c'; fi`

minerd-util.o: util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-util.o -MD -MP -MF $(DEPDIR)/minerd-util.Tpo -c -o minerd-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-util.Tpo $(DEPDIR)/minerd-util.Po
#	$(AM_V_CC)source='util.c' object='minerd-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

minerd-util.obj: util.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-util.obj -MD -MP -MF $(DEPDIR)/minerd-util.Tpo -c -o minerd-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-util.Tpo $(DEPDIR)/minerd-util.Po
#	$(AM_V_CC)source='util.c' object='minerd-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

minerd-sha2.o: x2/sha2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-sha2.o -MD -MP -MF $(DEPDIR)/minerd-sha2.Tpo -c -o minerd-sha2.o `test -f 'x2/sha2.c' || echo '$(srcdir)/'`x2/sha2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2.Tpo $(DEPDIR)/minerd-sha2.Po
#	$(AM_V_CC)source='x2/sha2.c' object='minerd-sha2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-sha2.o `test -f 'x2/sha2.c' || echo '$(srcdir)/'`x2/sha2.c

minerd-sha2.obj: x2/sha2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-sha2.obj -MD -MP -MF $(DEPDIR)/minerd-sha2.Tpo -c -o minerd-sha2.obj `if test -f 'x2/sha2.c'; then $(CYGPATH_W) 'x2/sha2.c'; else $(CYGPATH_W) '$(srcdir)/x2/sha2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-sha2.Tpo $(DEPDIR)/minerd-sha2.Po
#	$(AM_V_CC)source='x2/sha2.c' object='minerd-sha2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-sha2.obj `if test -f 'x2/sha2.c'; then $(CYGPATH_W) 'x2/sha2.c'; else $(CYGPATH_W) '$(srcdir)/x2/sha2.c'; fi`

minerd-scrypt.o: x2/scrypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-scrypt.o -MD -MP -MF $(DEPDIR)/minerd-scrypt.Tpo -c -o minerd-scrypt.o `test -f 'x2/scrypt.c' || echo '$(srcdir)/'`x2/scrypt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt.Tpo $(DEPDIR)/minerd-scrypt.Po
#	$(AM_V_CC)source='x2/scrypt.c' object='minerd-scrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-scrypt.o `test -f 'x2/scrypt.c' || echo '$(srcdir)/'`x2/scrypt.c

minerd-scrypt.obj: x2/scrypt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-scrypt.obj -MD -MP -MF $(DEPDIR)/minerd-scrypt.Tpo -c -o minerd-scrypt.obj `if test -f 'x2/scrypt.c'; then $(CYGPATH_W) 'x2/scrypt.c'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-scrypt.Tpo $(DEPDIR)/minerd-scrypt.Po
#	$(AM_V_CC)source='x2/scrypt.c' object='minerd-scrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-scrypt.obj `if test -f 'x2/scrypt.c'; then $(CYGPATH_W) 'x2/scrypt.c'; else $(CYGPATH_W) '$(srcdir)/x2/scrypt.c'; fi`

minerd-aes_helper.o: x5/aes_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-aes_helper.o -MD -MP -MF $(DEPDIR)/minerd-aes_helper.Tpo -c -o minerd-aes_helper.o `test -f 'x5/aes_helper.c' || echo '$(srcdir)/'`x5/aes_helper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-aes_helper.Tpo $(DEPDIR)/minerd-aes_helper.Po
#	$(AM_V_CC)source='x5/aes_helper.c' object='minerd-aes_helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-aes_helper.o `test -f 'x5/aes_helper.c' || echo '$(srcdir)/'`x5/aes_helper.c

minerd-aes_helper.obj: x5/aes_helper.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-aes_helper.obj -MD -MP -MF $(DEPDIR)/minerd-aes_helper.Tpo -c -o minerd-aes_helper.obj `if test -f 'x5/aes_helper.c'; then $(CYGPATH_W) 'x5/aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/x5/aes_helper.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-aes_helper.Tpo $(DEPDIR)/minerd-aes_helper.Po
#	$(AM_V_CC)source='x5/aes_helper.c' object='minerd-aes_helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-aes_helper.obj `if test -f 'x5/aes_helper.c'; then $(CYGPATH_W) 'x5/aes_helper.c'; else $(CYGPATH_W) '$(srcdir)/x5/aes_helper.c'; fi`

minerd-luffa_for_sse2.o: x5/luffa_for_sse2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-luffa_for_sse2.o -MD -MP -MF $(DEPDIR)/minerd-luffa_for_sse2.Tpo -c -o minerd-luffa_for_sse2.o `test -f 'x5/luffa_for_sse2.c' || echo '$(srcdir)/'`x5/luffa_for_sse2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-luffa_for_sse2.Tpo $(DEPDIR)/minerd-luffa_for_sse2.Po
#	$(AM_V_CC)source='x5/luffa_for_sse2.c' object='minerd-luffa_for_sse2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-luffa_for_sse2.o `test -f 'x5/luffa_for_sse2.c' || echo '$(srcdir)/'`x5/luffa_for_sse2.c

minerd-luffa_for_sse2.obj: x5/luffa_for_sse2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-luffa_for_sse2.obj -MD -MP -MF $(DEPDIR)/minerd-luffa_for_sse2.Tpo -c -o minerd-luffa_for_sse2.obj `if test -f 'x5/luffa_for_sse2.c'; then $(CYGPATH_W) 'x5/luffa_for_sse2.c'; else $(CYGPATH_W) '$(srcdir)/x5/luffa_for_sse2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-luffa_for_sse2.Tpo $(DEPDIR)/minerd-luffa_for_sse2.Po
#	$(AM_V_CC)source='x5/luffa_for_sse2.c' object='minerd-luffa_for_sse2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-luffa_for_sse2.obj `if test -f 'x5/luffa_for_sse2.c'; then $(CYGPATH_W) 'x5/luffa_for_sse2.c'; else $(CYGPATH_W) '$(srcdir)/x5/luffa_for_sse2.c'; fi`

minerd-shavite.o: x5/shavite.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-shavite.o -MD -MP -MF $(DEPDIR)/minerd-shavite.Tpo -c -o minerd-shavite.o `test -f 'x5/shavite.c' || echo '$(srcdir)/'`x5/shavite.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-shavite.Tpo $(DEPDIR)/minerd-shavite.Po
#	$(AM_V_CC)source='x5/shavite.c' object='minerd-shavite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-shavite.o `test -f 'x5/shavite.c' || echo '$(srcdir)/'`x5/shavite.c

minerd-shavite.obj: x5/shavite.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-shavite.obj -MD -MP -MF $(DEPDIR)/minerd-shavite.Tpo -c -o minerd-shavite.obj `if test -f 'x5/shavite.c'; then $(CYGPATH_W) 'x5/shavite.c'; else $(CYGPATH_W) '$(srcdir)/x5/shavite.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-shavite.Tpo $(DEPDIR)/minerd-shavite.Po
#	$(AM_V_CC)source='x5/shavite.c' object='minerd-shavite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-shavite.obj `if test -f 'x5/shavite.c'; then $(CYGPATH_W) 'x5/shavite.c'; else $(CYGPATH_W) '$(srcdir)/x5/shavite.c'; fi`

minerd-cubehash_sse2.o: x5/cubehash_sse2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cubehash_sse2.o -MD -MP -MF $(DEPDIR)/minerd-cubehash_sse2.Tpo -c -o minerd-cubehash_sse2.o `test -f 'x5/cubehash_sse2.c' || echo '$(srcdir)/'`x5/cubehash_sse2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-cubehash_sse2.Tpo $(DEPDIR)/minerd-cubehash_sse2.Po
#	$(AM_V_CC)source='x5/cubehash_sse2.c' object='minerd-cubehash_sse2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cubehash_sse2.o `test -f 'x5/cubehash_sse2.c' || echo '$(srcdir)/'`x5/cubehash_sse2.c

minerd-cubehash_sse2.obj: x5/cubehash_sse2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-cubehash_sse2.obj -MD -MP -MF $(DEPDIR)/minerd-cubehash_sse2.Tpo -c -o minerd-cubehash_sse2.obj `if test -f 'x5/cubehash_sse2.c'; then $(CYGPATH_W) 'x5/cubehash_sse2.c'; else $(CYGPATH_W) '$(srcdir)/x5/cubehash_sse2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-cubehash_sse2.Tpo $(DEPDIR)/minerd-cubehash_sse2.Po
#	$(AM_V_CC)source='x5/cubehash_sse2.c' object='minerd-cubehash_sse2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-cubehash_sse2.obj `if test -f 'x5/cubehash_sse2.c'; then $(CYGPATH_W) 'x5/cubehash_sse2.c'; else $(CYGPATH_W) '$(srcdir)/x5/cubehash_sse2.c'; fi`

minerd-nist.o: x5/vect128/nist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-nist.o -MD -MP -MF $(DEPDIR)/minerd-nist.Tpo -c -o minerd-nist.o `test -f 'x5/vect128/nist.c' || echo '$(srcdir)/'`x5/vect128/nist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-nist.Tpo $(DEPDIR)/minerd-nist.Po
#	$(AM_V_CC)source='x5/vect128/nist.c' object='minerd-nist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-nist.o `test -f 'x5/vect128/nist.c' || echo '$(srcdir)/'`x5/vect128/nist.c

minerd-nist.obj: x5/vect128/nist.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-nist.obj -MD -MP -MF $(DEPDIR)/minerd-nist.Tpo -c -o minerd-nist.obj `if test -f 'x5/vect128/nist.c'; then $(CYGPATH_W) 'x5/vect128/nist.c'; else $(CYGPATH_W) '$(srcdir)/x5/vect128/nist.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-nist.Tpo $(DEPDIR)/minerd-nist.Po
#	$(AM_V_CC)source='x5/vect128/nist.c' object='minerd-nist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-nist.obj `if test -f 'x5/vect128/nist.c'; then $(CYGPATH_W) 'x5/vect128/nist.c'; else $(CYGPATH_W) '$(srcdir)/x5/vect128/nist.c'; fi`

minerd-vector.o: x5/vect128/vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-vector.o -MD -MP -MF $(DEPDIR)/minerd-vector.Tpo -c -o minerd-vector.o `test -f 'x5/vect128/vector.c' || echo '$(srcdir)/'`x5/vect128/vector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-vector.Tpo $(DEPDIR)/minerd-vector.Po
#	$(AM_V_CC)source='x5/vect128/vector.c' object='minerd-vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-vector.o `test -f 'x5/vect128/vector.c' || echo '$(srcdir)/'`x5/vect128/vector.c

minerd-vector.obj: x5/vect128/vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-vector.obj -MD -MP -MF $(DEPDIR)/minerd-vector.Tpo -c -o minerd-vector.obj `if test -f 'x5/vect128/vector.c'; then $(CYGPATH_W) 'x5/vect128/vector.c'; else $(CYGPATH_W) '$(srcdir)/x5/vect128/vector.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-vector.Tpo $(DEPDIR)/minerd-vector.Po
#	$(AM_V_CC)source='x5/vect128/vector.c' object='minerd-vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-vector.obj `if test -f 'x5/vect128/vector.c'; then $(CYGPATH_W) 'x5/vect128/vector.c'; else $(CYGPATH_W) '$(srcdir)/x5/vect128/vector.c'; fi`

minerd-echo.o: x5/echo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-echo.o -MD -MP -MF $(DEPDIR)/minerd-echo.Tpo -c -o minerd-echo.o `test -f 'x5/echo.c' || echo '$(srcdir)/'`x5/echo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-echo.Tpo $(DEPDIR)/minerd-echo.Po
#	$(AM_V_CC)source='x5/echo.c' object='minerd-echo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-echo.o `test -f 'x5/echo.c' || echo '$(srcdir)/'`x5/echo.c

minerd-echo.obj: x5/echo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-echo.obj -MD -MP -MF $(DEPDIR)/minerd-echo.Tpo -c -o minerd-echo.obj `if test -f 'x5/echo.c'; then $(CYGPATH_W) 'x5/echo.c'; else $(CYGPATH_W) '$(srcdir)/x5/echo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-echo.Tpo $(DEPDIR)/minerd-echo.Po
#	$(AM_V_CC)source='x5/echo.c' object='minerd-echo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-echo.obj `if test -f 'x5/echo.c'; then $(CYGPATH_W) 'x5/echo.c'; else $(CYGPATH_W) '$(srcdir)/x5/echo.c'; fi`

minerd-blake.o: x6/blake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-blake.o -MD -MP -MF $(DEPDIR)/minerd-blake.Tpo -c -o minerd-blake.o `test -f 'x6/blake.c' || echo '$(srcdir)/'`x6/blake.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-blake.Tpo $(DEPDIR)/minerd-blake.Po
#	$(AM_V_CC)source='x6/blake.c' object='minerd-blake.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-blake.o `test -f 'x6/blake.c' || echo '$(srcdir)/'`x6/blake.c

minerd-blake.obj: x6/blake.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-blake.obj -MD -MP -MF $(DEPDIR)/minerd-blake.Tpo -c -o minerd-blake.obj `if test -f 'x6/blake.c'; then $(CYGPATH_W) 'x6/blake.c'; else $(CYGPATH_W) '$(srcdir)/x6/blake.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-blake.Tpo $(DEPDIR)/minerd-blake.Po
#	$(AM_V_CC)source='x6/blake.c' object='minerd-blake.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-blake.obj `if test -f 'x6/blake.c'; then $(CYGPATH_W) 'x6/blake.c'; else $(CYGPATH_W) '$(srcdir)/x6/blake.c'; fi`

minerd-hash.o: x5/echo512/ccalik/aesni/hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-hash.o -MD -MP -MF $(DEPDIR)/minerd-hash.Tpo -c -o minerd-hash.o `test -f 'x5/echo512/ccalik/aesni/hash.c' || echo '$(srcdir)/'`x5/echo512/ccalik/aesni/hash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-hash.Tpo $(DEPDIR)/minerd-hash.Po
#	$(AM_V_CC)source='x5/echo512/ccalik/aesni/hash.c' object='minerd-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-hash.o `test -f 'x5/echo512/ccalik/aesni/hash.c' || echo '$(srcdir)/'`x5/echo512/ccalik/aesni/hash.c

minerd-hash.obj: x5/echo512/ccalik/aesni/hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-hash.obj -MD -MP -MF $(DEPDIR)/minerd-hash.Tpo -c -o minerd-hash.obj `if test -f 'x5/echo512/ccalik/aesni/hash.c'; then $(CYGPATH_W) 'x5/echo512/ccalik/aesni/hash.c'; else $(CYGPATH_W) '$(srcdir)/x5/echo512/ccalik/aesni/hash.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-hash.Tpo $(DEPDIR)/minerd-hash.Po
#	$(AM_V_CC)source='x5/echo512/ccalik/aesni/hash.c' object='minerd-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-hash.obj `if test -f 'x5/echo512/ccalik/aesni/hash.c'; then $(CYGPATH_W) 'x5/echo512/ccalik/aesni/hash.c'; else $(CYGPATH_W) '$(srcdir)/x5/echo512/ccalik/aesni/hash.c'; fi`

minerd-hash-groestl.o: x6/groestl/aesni/hash-groestl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-hash-groestl.o -MD -MP -MF $(DEPDIR)/minerd-hash-groestl.Tpo -c -o minerd-hash-groestl.o `test -f 'x6/groestl/aesni/hash-groestl.c' || echo '$(srcdir)/'`x6/groestl/aesni/hash-groestl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-hash-groestl.Tpo $(DEPDIR)/minerd-hash-groestl.Po
#	$(AM_V_CC)source='x6/groestl/aesni/hash-groestl.c' object='minerd-hash-groestl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-hash-groestl.o `test -f 'x6/groestl/aesni/hash-groestl.c' || echo '$(srcdir)/'`x6/groestl/aesni/hash-groestl.c

minerd-hash-groestl.obj: x6/groestl/aesni/hash-groestl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-hash-groestl.obj -MD -MP -MF $(DEPDIR)/minerd-hash-groestl.Tpo -c -o minerd-hash-groestl.obj `if test -f 'x6/groestl/aesni/hash-groestl.c'; then $(CYGPATH_W) 'x6/groestl/aesni/hash-groestl.c'; else $(CYGPATH_W) '$(srcdir)/x6/groestl/aesni/hash-groestl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-hash-groestl.Tpo $(DEPDIR)/minerd-hash-groestl.Po
#	$(AM_V_CC)source='x6/groestl/aesni/hash-groestl.c' object='minerd-hash-groestl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-hash-groestl.obj `if test -f 'x6/groestl/aesni/hash-groestl.c'; then $(CYGPATH_W) 'x6/groestl/aesni/hash-groestl.c'; else $(CYGPATH_W) '$(srcdir)/x6/groestl/aesni/hash-groestl.c'; fi`

minerd-xcoin.o: xcoin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-xcoin.o -MD -MP -MF $(DEPDIR)/minerd-xcoin.Tpo -c -o minerd-xcoin.o `test -f 'xcoin.c' || echo '$(srcdir)/'`xcoin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-xcoin.Tpo $(DEPDIR)/minerd-xcoin.Po
#	$(AM_V_CC)source='xcoin.c' object='minerd-xcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-xcoin.o `test -f 'xcoin.c' || echo '$(srcdir)/'`xcoin.c

minerd-xcoin.obj: xcoin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minerd-xcoin.obj -MD -MP -MF $(DEPDIR)/minerd-xcoin.Tpo -c -o minerd-xcoin.obj `if test -f 'xcoin.c'; then $(CYGPATH_W) 'xcoin.c'; else $(CYGPATH_W) '$(srcdir)/xcoin.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/minerd-xcoin.Tpo $(DEPDIR)/minerd-xcoin.Po
#	$(AM_V_CC)source='xcoin.c' object='minerd-xcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(minerd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minerd-xcoin.obj `if test -f 'xcoin.c'; then $(CYGPATH_W) 'xcoin.c'; else $(CYGPATH_W) '$(srcdir)/xcoin.c'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) cpuminer-config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) all install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
